{"ast":null,"code":"var _jsxFileName = \"/home/fidha/Desktop/work/TodayILearned/src/Fact.jsx\";\nimport React, { useState } from 'react';\nimport supabase from './supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = [{\n  name: \"technology\",\n  color: \"#3b82f6\"\n}, {\n  name: \"science\",\n  color: \"#16a34a\"\n}, {\n  name: \"finance\",\n  color: \"#ef4444\"\n}, {\n  name: \"society\",\n  color: \"#eab308\"\n}, {\n  name: \"entertainment\",\n  color: \"#db2777\"\n}, {\n  name: \"health\",\n  color: \"#14b8a6\"\n}, {\n  name: \"history\",\n  color: \"#f97316\"\n}, {\n  name: \"news\",\n  color: \"#8b5cf6\"\n}];\nfunction Fact({\n  fact,\n  setFacts\n}) {\n  var _CATEGORIES$find;\n  const [isUpdating, setisUpdating] = useState;\n  async function handleVote() {\n    const {\n      data: updatedFact,\n      error\n    } = await supabase.from(\"facts\").update({\n      votesInteresting: fact.votesInteresting + 1\n    }).eq(\"id\", fact.id).select();\n    console.log(updatedFact);\n    console.log(error);\n    if (!error) setFacts(facts => facts.map(f => f.id === fact.id ? updatedFact[0] : f));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"fact\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [fact.text, /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"source\",\n          href: fact.source,\n          children: \"(Source)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        style: {\n          backgroundColor: (_CATEGORIES$find = CATEGORIES.find(cat => cat.name === fact.category)) === null || _CATEGORIES$find === void 0 ? void 0 : _CATEGORIES$find.color\n        },\n        children: fact.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleVote,\n          children: [\"\\uD83D\\uDC4D \", fact.votesInteresting]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"\\uD83E\\uDD2F \", fact.votesMindblowing]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: [\"\\u26D4\\uFE0F \", fact.votesFalse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, fact.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Fact;\nexport default Fact;\nvar _c;\n$RefreshReg$(_c, \"Fact\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","CATEGORIES","name","color","Fact","fact","setFacts","_CATEGORIES$find","isUpdating","setisUpdating","handleVote","data","updatedFact","error","from","update","votesInteresting","eq","id","select","console","log","facts","map","f","children","className","text","href","source","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","find","cat","category","onClick","votesMindblowing","votesFalse","_c","$RefreshReg$"],"sources":["/home/fidha/Desktop/work/TodayILearned/src/Fact.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport supabase from './supabase';\n\n\nconst CATEGORIES = [\n    { name: \"technology\", color: \"#3b82f6\" },\n    { name: \"science\", color: \"#16a34a\" },\n    { name: \"finance\", color: \"#ef4444\" },\n    { name: \"society\", color: \"#eab308\" },\n    { name: \"entertainment\", color: \"#db2777\" },\n    { name: \"health\", color: \"#14b8a6\" },\n    { name: \"history\", color: \"#f97316\" },\n    { name: \"news\", color: \"#8b5cf6\" },\n];\n\n\nfunction Fact({ fact, setFacts }) {\n    const [isUpdating, setisUpdating] = useState\n\n    async function handleVote() {\n        const { data: updatedFact, error } = await supabase.from(\"facts\").update({ votesInteresting: fact.votesInteresting + 1 })\n            .eq(\"id\", fact.id)\n            .select();\n        console.log(updatedFact);\n        console.log(error);\n        if (!error)\n            setFacts((facts) => facts.map((f) => (f.id === fact.id ? updatedFact[0] : f))\n            );\n    }\n\n\n    return (\n        <>\n            <li key={fact.id} className=\"fact\">\n                <p >\n                    {fact.text}\n                    <a className=\"source\" href={fact.source}>(Source)</a>\n                </p>\n                <span className=\"tag\" style={{\n                    backgroundColor: CATEGORIES.find((cat) => cat.name === fact.category)?.color\n                }}>{fact.category}</span>\n                <div className=\"vote-buttons\">\n                    <button onClick={handleVote} >üëç {fact.votesInteresting}</button>\n                    <button>ü§Ø {fact.votesMindblowing}</button>\n                    <button>‚õîÔ∏è {fact.votesFalse}</button>\n                </div>\n            </li></>\n    )\n}\n\nexport default Fact"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/fidha/Desktop/work/TodayILearned/src/Fact.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport supabase from './supabase';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = [{\n  name: \"technology\",\n  color: \"#3b82f6\"\n}, {\n  name: \"science\",\n  color: \"#16a34a\"\n}, {\n  name: \"finance\",\n  color: \"#ef4444\"\n}, {\n  name: \"society\",\n  color: \"#eab308\"\n}, {\n  name: \"entertainment\",\n  color: \"#db2777\"\n}, {\n  name: \"health\",\n  color: \"#14b8a6\"\n}, {\n  name: \"history\",\n  color: \"#f97316\"\n}, {\n  name: \"news\",\n  color: \"#8b5cf6\"\n}];\nfunction Fact({\n  fact,\n  setFacts\n}) {\n  _s();\n  var _CATEGORIES$find;\n  const [isUpdating, setisUpdating] = useState(false);\n  const isDisputed = fact.votesInteresting + fact.vot;\n  async function handleVote(columnName) {\n    setisUpdating(true);\n    const {\n      data: updatedFact,\n      error\n    } = await supabase.from(\"facts\").update({\n      [columnName]: fact[columnName] + 1\n    }).eq(\"id\", fact.id).select();\n    setisUpdating(false);\n    if (!error) setFacts(facts => facts.map(f => f.id === fact.id ? updatedFact[0] : f));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"fact\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [isDisputed ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"disputed\",\n          children: \"[Disputed]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 35\n        }, this) : null, fact.text, /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"source\",\n          href: fact.source,\n          children: \"(Source)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"tag\",\n        style: {\n          backgroundColor: (_CATEGORIES$find = CATEGORIES.find(cat => cat.name === fact.category)) === null || _CATEGORIES$find === void 0 ? void 0 : _CATEGORIES$find.color\n        },\n        children: fact.category\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vote-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(\"votesInteresting\"),\n          disabled: isUpdating,\n          children: [\"\\uD83D\\uDC4D \", fact.votesInteresting]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(\"votesMindblowing\"),\n          disabled: isUpdating,\n          children: [\"\\uD83E\\uDD2F \", fact.votesMindblowing]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleVote(\"votesFalse\"),\n          disabled: isUpdating,\n          children: [\"\\u26D4\\uFE0F \", fact.votesFalse]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, fact.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Fact, \"X/JBNrTVWWhfV/8I1e7KJslLcPw=\");\n_c = Fact;\nexport default Fact;\nvar _c;\n$RefreshReg$(_c, \"Fact\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","Fragment","_Fragment","CATEGORIES","name","color","Fact","fact","setFacts","_s","_CATEGORIES$find","isUpdating","setisUpdating","isDisputed","votesInteresting","vot","handleVote","columnName","data","updatedFact","error","from","update","eq","id","select","facts","map","f","children","className","fileName","_jsxFileName","lineNumber","columnNumber","text","href","source","style","backgroundColor","find","cat","category","onClick","disabled","votesMindblowing","votesFalse","_c","$RefreshReg$"],"sources":["/home/fidha/Desktop/work/TodayILearned/src/Fact.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport supabase from './supabase';\nimport './style.css';\n\n\nconst CATEGORIES = [\n    { name: \"technology\", color: \"#3b82f6\" },\n    { name: \"science\", color: \"#16a34a\" },\n    { name: \"finance\", color: \"#ef4444\" },\n    { name: \"society\", color: \"#eab308\" },\n    { name: \"entertainment\", color: \"#db2777\" },\n    { name: \"health\", color: \"#14b8a6\" },\n    { name: \"history\", color: \"#f97316\" },\n    { name: \"news\", color: \"#8b5cf6\" },\n];\n\n\nfunction Fact({ fact, setFacts }) {\n    const [isUpdating, setisUpdating] = useState(false);\n    const isDisputed = fact.votesInteresting + fact.vot\n\n    async function handleVote(columnName) {\n        setisUpdating(true);\n        const { data: updatedFact, error } = await supabase.from(\"facts\").update({ [columnName]: fact[columnName] + 1 })\n            .eq(\"id\", fact.id)\n            .select();\n        setisUpdating(false);\n\n        if (!error)\n            setFacts((facts) => facts.map((f) => (f.id === fact.id ? updatedFact[0] : f))\n            );\n    }\n\n\n    return (\n        <>\n            <li key={fact.id} className=\"fact\">\n                <p >\n                    {isDisputed ? <span className='disputed'>[Disputed]</span> : null}\n                    {fact.text}\n                    <a className=\"source\" href={fact.source}>(Source)</a>\n                </p>\n                <span className=\"tag\" style={{\n                    backgroundColor: CATEGORIES.find((cat) => cat.name === fact.category)?.color\n                }}>{fact.category}</span>\n                <div className=\"vote-buttons\">\n                    <button onClick={() => handleVote(\"votesInteresting\")} disabled={isUpdating} >üëç {fact.votesInteresting}</button>\n                    <button onClick={() => handleVote(\"votesMindblowing\")} disabled={isUpdating}>ü§Ø {fact.votesMindblowing}</button>\n                    <button onClick={() => handleVote(\"votesFalse\")} disabled={isUpdating}>‚õîÔ∏è {fact.votesFalse}</button>\n                </div>\n            </li></>\n    )\n}\n\nexport default Fact"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
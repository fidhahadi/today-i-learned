{"ast":null,"code":"var _jsxFileName = \"/home/fidha/Desktop/work/TodayILearned/src/NewFactForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style.css';\nimport supabase from './supabase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = [{\n  name: \"technology\",\n  color: \"#3b82f6\"\n}, {\n  name: \"science\",\n  color: \"#16a34a\"\n}, {\n  name: \"finance\",\n  color: \"#ef4444\"\n}, {\n  name: \"society\",\n  color: \"#eab308\"\n}, {\n  name: \"entertainment\",\n  color: \"#db2777\"\n}, {\n  name: \"health\",\n  color: \"#14b8a6\"\n}, {\n  name: \"history\",\n  color: \"#f97316\"\n}, {\n  name: \"news\",\n  color: \"#8b5cf6\"\n}];\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\nfunction NewFactForm({\n  setFacts,\n  setshowForm\n}) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n  const [isUploading, setisUploading] = useState(false);\n  const textLength = text.length;\n  async function handleSubmit(e) {\n    //1. Prevent browser reload\n    e.preventDefault();\n    console.log(text, source, category);\n\n    //2. check if data is valid,if so create a new fact\n    if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n      // const newFact = {\n      //     id: Math.round(Math.random() * 10000000),\n      //     text,\n      //     source,\n      //     category,\n      //     votesInteresting: 0,\n      //     votesMindblowing: 0,\n      //     votesFalse: 0,\n      //     createdIn: new Date().getFullYear(),\n      // };\n      //upload fact to supabase and receive the new fact object\n      setisUploading(true);\n      const {\n        data: newFact,\n        error\n      } = await supabase.from(\"facts\").insert([{\n        text,\n        source,\n        category\n      }]).select();\n      setisUploading(false);\n\n      //4.add the new fact to the ui , add the fact state\\\n      // adding the previous facts to the newly added fact\n      setFacts(facts => [newFact[0], ...facts]);\n      setText(\"\");\n      setSource(\"\");\n      setcategory(\"\");\n      setshowForm(false);\n    }\n\n    //.3. create new fact object\n\n    //5. reset input fields\n    // 6. close the form\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formEl fact-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      disabled: isUploading,\n      placeholder: \"Share a fact with the world...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: 200 - textLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      disabled: isUploading,\n      value: source,\n      onChange: e => setSource(e.target.value),\n      placeholder: \"Trustworthy source...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setcategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.name,\n        children: cat.name.toUpperCase()\n      }, cat.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large\",\n      disabled: isUploading,\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(NewFactForm, \"LJJLiILD3FGtHXlmoro0uveo1ns=\");\n_c = NewFactForm;\nexport default NewFactForm;\nvar _c;\n$RefreshReg$(_c, \"NewFactForm\");","map":{"version":3,"names":["React","useState","supabase","jsxDEV","_jsxDEV","CATEGORIES","name","color","isValidHttpUrl","string","url","URL","_","protocol","NewFactForm","setFacts","setshowForm","_s","text","setText","source","setSource","category","setcategory","isUploading","setisUploading","textLength","length","handleSubmit","e","preventDefault","console","log","data","newFact","error","from","insert","select","facts","className","onSubmit","children","type","disabled","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","toUpperCase","_c","$RefreshReg$"],"sources":["/home/fidha/Desktop/work/TodayILearned/src/NewFactForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './style.css';\nimport supabase from './supabase';\n\n\n\nconst CATEGORIES = [\n    { name: \"technology\", color: \"#3b82f6\" },\n    { name: \"science\", color: \"#16a34a\" },\n    { name: \"finance\", color: \"#ef4444\" },\n    { name: \"society\", color: \"#eab308\" },\n    { name: \"entertainment\", color: \"#db2777\" },\n    { name: \"health\", color: \"#14b8a6\" },\n    { name: \"history\", color: \"#f97316\" },\n    { name: \"news\", color: \"#8b5cf6\" },\n];\n\nfunction isValidHttpUrl(string) {\n    let url;\n\n    try {\n        url = new URL(string);\n    } catch (_) {\n        return false;\n    }\n\n    return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction NewFactForm({ setFacts, setshowForm }) {\n    const [text, setText] = useState(\"\");\n    const [source, setSource] = useState(\"\");\n    const [category, setcategory] = useState(\"\");\n    const [isUploading, setisUploading] = useState(false);\n    const textLength = text.length;\n\n    async function handleSubmit(e) {\n        //1. Prevent browser reload\n        e.preventDefault();\n\n        console.log(text, source, category);\n\n        //2. check if data is valid,if so create a new fact\n        if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n            // const newFact = {\n            //     id: Math.round(Math.random() * 10000000),\n            //     text,\n            //     source,\n            //     category,\n            //     votesInteresting: 0,\n            //     votesMindblowing: 0,\n            //     votesFalse: 0,\n            //     createdIn: new Date().getFullYear(),\n            // };\n            //upload fact to supabase and receive the new fact object\n            setisUploading(true);\n            const { data: newFact, error } = await supabase.from(\"facts\").insert([{ text, source, category }]).select();\n            setisUploading(false);\n\n\n            //4.add the new fact to the ui , add the fact state\\\n            // adding the previous facts to the newly added fact\n            setFacts((facts) => [newFact[0], ...facts]);\n            setText(\"\");\n            setSource(\"\");\n            setcategory(\"\");\n            setshowForm(false);\n        }\n\n        //.3. create new fact object\n\n        //5. reset input fields\n        // 6. close the form\n\n    }\n\n    return (\n\n        <form className=\"formEl fact-form\" onSubmit={handleSubmit}>\n            <input type=\"text\" disabled={isUploading} placeholder=\"Share a fact with the world...\" value={text}\n                onChange={(e) => setText(e.target.value)} />\n            <span>{200 - textLength}</span>\n            <input type=\"text\" disabled={isUploading} value={source} onChange={(e) => setSource(e.target.value)} placeholder=\"Trustworthy source...\" />\n            <select value={category} onChange={(e) => setcategory(e.target.value)}>\n                <option value=\"\">Choose category:</option>\n                {CATEGORIES.map((cat) => <option key={cat.name} value={cat.name}>{cat.name.toUpperCase()}</option>)}\n            </select>\n            <button className=\"btn btn-large\" disabled={isUploading} >Post</button>\n        </form>\n\n    )\n}\n\nexport default NewFactForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
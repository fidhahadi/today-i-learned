{"ast":null,"code":"var _jsxFileName = \"/home/fidha/Desktop/work/TodayILearned/src/NewFactForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CATEGORIES = [{\n  name: \"technology\",\n  color: \"#3b82f6\"\n}, {\n  name: \"science\",\n  color: \"#16a34a\"\n}, {\n  name: \"finance\",\n  color: \"#ef4444\"\n}, {\n  name: \"society\",\n  color: \"#eab308\"\n}, {\n  name: \"entertainment\",\n  color: \"#db2777\"\n}, {\n  name: \"health\",\n  color: \"#14b8a6\"\n}, {\n  name: \"history\",\n  color: \"#f97316\"\n}, {\n  name: \"news\",\n  color: \"#8b5cf6\"\n}];\nfunction isValidHttpUrl(string) {\n  let url;\n  try {\n    url = new URL(string);\n  } catch (_) {\n    return false;\n  }\n  return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\nfunction NewFactForm() {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [source, setSource] = useState(\"\");\n  const [category, setcategory] = useState(\"\");\n  const textLength = text.length;\n  function handleSubmit(e) {\n    //1. Prevent browser reload\n    e.preventDefault();\n    console.log(text, source, category);\n\n    //2. check if data is valid,if so create a new fact\n    if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n      const newFact = {\n        id: 3,\n        text,\n        source,\n        category: \"society\",\n        votesInteresting: 8,\n        votesMindblowing: 3,\n        votesFalse: 1,\n        createdIn: 2015\n      };\n    }\n\n    //.3. create new fact object\n    //4.add the new fact to the ui , add the fact state\n    //5. reset input fields\n    // 6. close the form\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"formEl fact-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Share a fact with the world...\",\n      value: text,\n      onChange: e => setText(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: 200 - textLength\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: source,\n      onChange: e => setSource(e.target.value),\n      placeholder: \"Trustworthy source...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: category,\n      onChange: e => setcategory(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Choose category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), CATEGORIES.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: cat.name,\n        children: cat.name.toUpperCase()\n      }, cat.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 42\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-large\",\n      children: \"Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(NewFactForm, \"MrHCid4VK09OUMW5Et9z1rmASHg=\");\n_c = NewFactForm;\nexport default NewFactForm;\nvar _c;\n$RefreshReg$(_c, \"NewFactForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CATEGORIES","name","color","isValidHttpUrl","string","url","URL","_","protocol","NewFactForm","_s","text","setText","source","setSource","category","setcategory","textLength","length","handleSubmit","e","preventDefault","console","log","newFact","id","votesInteresting","votesMindblowing","votesFalse","createdIn","className","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","map","cat","toUpperCase","_c","$RefreshReg$"],"sources":["/home/fidha/Desktop/work/TodayILearned/src/NewFactForm.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './style.css';\n\n\nconst CATEGORIES = [\n    { name: \"technology\", color: \"#3b82f6\" },\n    { name: \"science\", color: \"#16a34a\" },\n    { name: \"finance\", color: \"#ef4444\" },\n    { name: \"society\", color: \"#eab308\" },\n    { name: \"entertainment\", color: \"#db2777\" },\n    { name: \"health\", color: \"#14b8a6\" },\n    { name: \"history\", color: \"#f97316\" },\n    { name: \"news\", color: \"#8b5cf6\" },\n];\n\nfunction isValidHttpUrl(string) {\n    let url;\n\n    try {\n        url = new URL(string);\n    } catch (_) {\n        return false;\n    }\n\n    return url.protocol === \"http:\" || url.protocol === \"https:\";\n}\n\nfunction NewFactForm() {\n    const [text, setText] = useState(\"\");\n    const [source, setSource] = useState(\"\");\n    const [category, setcategory] = useState(\"\");\n    const textLength = text.length;\n\n    function handleSubmit(e) {\n        //1. Prevent browser reload\n        e.preventDefault();\n\n        console.log(text, source, category);\n\n        //2. check if data is valid,if so create a new fact\n        if (text && isValidHttpUrl(source) && category && textLength <= 200) {\n            const newFact = {\n                id: 3,\n                text,\n                source,\n                category: \"society\",\n                votesInteresting: 8,\n                votesMindblowing: 3,\n                votesFalse: 1,\n                createdIn: 2015,\n            };\n        }\n\n\n\n\n        //.3. create new fact object\n        //4.add the new fact to the ui , add the fact state\n        //5. reset input fields\n        // 6. close the form\n\n    }\n\n    return (\n\n        <form className=\"formEl fact-form\" onSubmit={handleSubmit}>\n            <input type=\"text\" placeholder=\"Share a fact with the world...\" value={text}\n                onChange={(e) => setText(e.target.value)} />\n            <span>{200 - textLength}</span>\n            <input type=\"text\" value={source} onChange={(e) => setSource(e.target.value)} placeholder=\"Trustworthy source...\" />\n            <select value={category} onChange={(e) => setcategory(e.target.value)}>\n                <option value=\"\">Choose category:</option>\n                {CATEGORIES.map((cat) => <option key={cat.name} value={cat.name}>{cat.name.toUpperCase()}</option>)}\n            </select>\n            <button className=\"btn btn-large\">Post</button>\n        </form>\n\n    )\n}\n\nexport default NewFactForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}